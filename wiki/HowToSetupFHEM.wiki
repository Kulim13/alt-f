#labels Home,Automation,perl
#summary How-to setup FHEM to run on Alt-F

= How-to setup FHEM to run on Alt-F =

Contributed by GaÃ«l Bringou

== What is FHEM ? ==
[http://www.fhem.de From the official web site :]
Fhem is a GPL'd perl server for house automation. It is used to automate some common tasks in the household like switching lamps / shutters / heating / etc. and to log events like temperature / humidity / power consumption.

The program runs as a server, you can control it via web-frontends, telnet, command line program or TCP/IP directly.
 
In order to use fhem you'll need a 24/7 server (PC, MacMini, Fritz!Box, NAS, etc) with a perl interpreter and some attached hardware like the CUL, FHZ1300PC, etc. to access the actors and sensors.

In my case, I use a DNS-323 from Dlink as perl server to run this software.
 
== What do I need to run FHEM ? ==
This tutorial cover the installation of FHEM using a [http://busware.de/tiki-index.php?page=CUL CUL device]. Note that this is not the only solution to control your house automation system with the FHEM server, but it is the only one covered in this tutorial.
 
So you need :
  # Basic knowledge of linux system (connect via Telnet or SSH, copy files etc.)
  # A Dlink DNS-323 with ALT-F on it. I tested this method with the flashed version. Your user and everything has to be setup.
  # A CUL dongle, flashed with the correct firmware (see appendix 1 to have more information)
  # The build version of the perl package Device::SerialPort (see appendix 2 to build it yourself with your box). You can download my version here : http://goo.gl/TA5f2
  # Around 1 hour if you don't build yourself the Device::SerialPort (around 4 hour if you do build it)
  # Some 824 Mhz, FHEM compatible gadgets (like [http://www.elv.de/raumregler-fht-80b-arr-bausatz-inkl-batterien.html FHT 80b], [http://www.elv.de/ventilantrieb-fht8v-2-arr-bausatz-inkl-batterien.html FHT8V], [http://www.elv.de/funk-temperatur-luftfeuchteaussensensor-s-300-th-fuer-z-b-elv-ws-200-300-elv-ws-300-pc-usb-wde1-und-ipwe-1.html S300 TH ] or [http://www.elv.de/funk-kombisensor-ks300-4-arr-bausatz.html KS300])
  # One USB key (optional)
  # One USB Hub (optional)
 
=== But what is a CUL device ? ===
A CUL device is basicly a usb dongle produced by [http://busware.de BusWare] used to send and receive data on the 868MHz or 433MHz frequency band. It exist different version of the CUL device. I personnally have the v3.

== How does this works ? ==
So basicaly, their is 2 basic fonction : receive data and sens data. (We suppose that all your gadget are suported by FHEM and the CUL device.)
The receive data part consiste mainly in logging everything. So it work like that :
   * Your gadget send some data
   * The CUL device received them
   * FHEM read the data received by the CUL device
   * FHEM save the data in a files, according to the data's source (if the source wasn't known before, FHEM can create automaticaly all what is needed to received and send data from/to this new device)
   * FHEM read the file and display the data in a conviene way
   
To send some data to a device (basicly, a command):
	* FHEM have to know the device before
	* FHEM send the command to the CUL device
	* The CUL device send the command to the target device
	
Of course, some programmation can be done to react on some event. Like to turn the heating system one every day at 5:00. Or to close the windows and/or shutter 15min after the sunset. etc.

== Details of my installation ==
My installation combine 2 objectif : 
 # to control my system 24h/24h,
 # use as less energie as possible.
 
The first goal is obvious to achieve with a NAS system running Alt-F RC2. To meet the second point, the whole system (including Alt-F package) are installed on a USB key. The most important point here, is to give a label to the usb key, in order to surivive correctly any reboot situation. To do so, go to Disk/Filesystem and put the name of the device (here "ExtUSB" whithtout the "") in the box "Label" and select "Set Label" from the column named "FS Operation"

== Setup ==

So here, the whole system will be setup on :
{{{
/mnt/ExtUSB
}}}

My user folder is
{{{
/mnt/ExtUSB/Users/gael
}}}

Then, from the web interface, install :
	# Alt-F Packages
	# perl (5.16.0-1)
	# kernel-modules	2.6.35.14-2
	
If you have downloaded the perl package [http://goo.gl/TA5f2 Device::SerialPort], please extract it somewhere on the NAS. Supose you have extracted to "/mnt/ExtUSB/Users/gael/arch". Then create the directories and copy the file whith the following command :
{{{
aufs.sh -n # always use this command first when directly modifying files under the /Alt-F directory
mkdir -p /Alt-F/usr/lib/perl/auto/Device/SerialPort
cp /mnt/ExtUSB/Users/gael/arch/auto/Device/SerialPort/SerialPort.bs /Alt-F/usr/lib/perl/auto/Device/SerialPort
cp /mnt/ExtUSB/Users/gael/arch/auto/Device/SerialPort/SerialPort.so /Alt-F/usr/lib/perl/auto/Device/SerialPort

mkdir -p /Alt-F/usr/lib/perl/Device/
cp /mnt/ExtUSB/Users/gael/arch/Device/SerialPort.pm /Alt-F/usr/lib/perl/Device
}}}
 
Good, you have just finished to install the SerialPort package for perl !

Then, download and extract the FHEM package (note that as today (January 2013) the last stable release is the 5.3.)

{{{
cd /mnt/ExtUSB/Users/gael/
wget http://fhem.de/fhem-5.3.tar.gz
tar -zxvf fhem-5.3.tar.gz
}}}
 
Now, you will have to update the Makefile from FHEM to adapt it to Alt-F. It is situated here : /mnt/ExtUSB/Users/gael/fhem-5.3/Makefile. Open the Makefile with your prefered files editing program. The first line are :

{{{
RELATIVE_PATH=YES
BINDIR=/opt/fhem
MODDIR=$(BINDIR)
VARDIR=$(BINDIR)/log
MANDIR=$(BINDIR)/docs
ETCDIR=$(BINDIR)
}}}
 
change them for something like:

{{{
RELATIVE_PATH=YES
BINDIR=/mnt/ExtUSB/Users/gael/software/fhem
MODDIR=$(BINDIR)
VARDIR=$(BINDIR)/log
MANDIR=$(BINDIR)/docs
ETCDIR=$(BINDIR)
}}}

(note that you may have to change the permission to the file to be able to save the change)
To change the permission on the file :

{{{
chmod 777 /mnt/ExtUSB/Users/gael/fhem-5.3/Makefile
}}}
 
Then, we will install FHEM with the pgm2 interface :

{{{
cd /mnt/ExtUSB/Users/gael/fhem-5.3/
make
}}}
 
Now, load the driver in order to use the CUL device :

{{{
insmod /mnt/ExtUSB/Alt-F/usr/lib/modules/2.6.35.14/kernel/drivers/usb/class/cdc-acm.ko
}}}
 
Configure the fhem.cfg files as you want it. Use the next command in the fhem.cfg to correctly load the CUL device in FHEM :

{{{
define CUL1 CUL /dev/ttyACM0@9600 1422
[...]
}}}
 
Finally, launch FHEM (assuming you saved the fhem.cfg files at the same position as I do)
 
{{{
perl /usr/bin/fhem.pl /mnt/ExtUSB/Users/gael/FHEM/fhem.cfg
}}}
  
Enjoy your fully fonctionnal FHEM installation !

= Appendix =
== 1 : Flash your new CUL device on a Windoes PC ==
Download and install the FLIP software from ATMEL website: http://www.atmel.com/dyn/products/tools_card.asp?tool_id=3886

Plug your CUL device in the pc usb port. When prompted for the driver install, do not install windows default driver.
Choose the driver from FLIP's '/usb' directories

Download the good firmware from : http://culfw.de/culfw.html

Follow this tutorial to flash the device : http://code.google.com/p/micropendous/wiki/LoadingFirmwareWithFLIP

Refer to this page to choose the proper Atmel references : http://busware.de/tiki-index.php?page=CUL . The firmware should be in the Device folder of the downloaded archive.

Done !

== 2 : Build yourself the Device::SerialPort ==

Once you have installed the perl package, you will have to install additional Alt-F packages to build the perl module. Namely, you have to install :
 * kernell-modules
 * make
 * gdb
 * libgpg

Then, you will have to configure the CPAN module in order set the correct folder name. Basicly, every time you can change the folder to download, build etc. you have to set a new folder, otherwise perl is going to compile everythings using the root directory, i.e. the internal memory of the DNS-323. And you don't want that.

So, type in a console :
	
{{{
perl -MCPAN -e shell
}}}

or, if you  it is not the first time you run this wizard, you can type

{{{
perl
o conf init
}}}

Here, you will have a lot of question. Basicly put the default choice everytime, if there is nothing said about a folder or a directorie. If the settings is about a directorie, just add the correct command to put the files in your user folder. In my case that was :

{{{
/mnt/ExtUSB/Users/gael/
}}}
 
Here is exactly what I did for my setup :


{{{
 Would you like to configure as much as possible automatically? [yes] -> No
 What approach do you want?  (Choose 'local::lib', 'sudo' or 'manual') [local::lib] -> enter
 CPAN build and cache directory? [/root/.cpan] -> /mnt/sdb1/Users/gael/.cpan/
 Download target directory? [/mnt/sdb1/Users/gael/.cpan/sources] -> enter
 Directory where the build process takes place? [/mnt/sdb1/Users/gael/.cpan/build] -> enter
 Store and re-use state information about distributions between CPAN.pm sessions? [no] -> enter
 Directory where to store default options/environment/dialogs for building modules that need some customization? [/mnt/sdb1/Users/gael/.cpan/prefs] -> enter
 Always commit changes to config variables to disk? [no] -> yes
 Cache size for build directory (in MB)? [100] -> enter
 Let the index expire after how many days? [1] -> enter
 Perform cache scanning ('atstart', 'atexit' or 'never')? [atstart] -> enter
 Cache metadata (yes/no)? [yes] -> enter
 Use CPAN::SQLite if available? (yes/no)? [no] -> enter
 Policy on building prerequisites (follow, ask or ignore)? [follow] -> enter
 Policy on installing 'build_requires' modules (yes, no, ask/yes, ask/no)? [yes] -> enter
 Always try to check and verify signatures if a SIGNATURE file is in the package and Module::Signature is installed (yes/no)? [no] -> enter
 Generate test reports if CPAN::Reporter is installed (yes/no)? [no] -> enter
 Do you want to rely on the test report history (yes/no)? [no] -> enter
 Which YAML implementation would you prefer? [YAML] -> enter (you will get an warning, it is ok)
 Do you want to enable code deserialisation (yes/no)? [no] -> enter
 Where is your make program? [/usr/bin/make] -> enter
 Where is your bzip2 program? [] -> /usr/bin/bunzip2
 Where is your gzip program? [/bin/gzip] -> enter
 Where is your tar program? [/bin/tar] -> enter
 Where is your unzip program? [/usr/bin/unzip] -> enter
 Where is your gpg program? [] -> enter
 Where is your patch program? [/usr/bin/patch] -> enter
 Where is your applypatch program? [] -> enter
 Where is your wget program? [/usr/bin/wget] -> enter
 What is your favorite pager program? [/bin/more ] -> enter
 What is your favorite shell? [/bin/sh] -> enter
 Use the external tar program instead of Archive::Tar? [yes] -> enter
 Tar command verbosity level (none or v or vv)? [none] -> enter
 Verbosity level for loading modules (none or v)? [none] -> enter
 Verbosity level for PERL5LIB changes (none or v)? [none] -> enter
 Do you want to turn this message off? [no] -> enter
 In case you can choose between running a Makefile.PL or a Build.PL, which installer would you prefer (EUMM or MB or RAND)? [MB] -> enter
 Parameters for the 'perl Makefile.PL' command? [] -> enter
 Your choice: [] -> enter
 <make_install_make_command> or some such. Your choice: [/usr/bin/make] -> enter
 <make_install_arg> Your choice: [] -> enter
 Parameters for the 'perl Build.PL' command? [] -> enter
 <mbuild_arg> Your choice: [] -> enter
 <mbuild_install_build_command> or some such. Your choice: [./Build] -> enter
 <mbuild_install_arg> Your choice: [] -> enter
 Timeout for inactivity during {Makefile,Build}.PL? [0] -> enter
 Timeout for parsing module versions? [15] -> enter
 Do you want to halt on failure (yes/no)? [no] -> enter
 <ftp_proxy> Your ftp_proxy? [] -> enter
 <http_proxy> Your http_proxy? [] -> enter
 <no_proxy> Your no_proxy? [] -> enter
 Shall we always set the FTP_PASSIVE environment variable when dealing with ftp download (yes/no)? [yes] -> enter
 Preferred method for determining the current working directory? [cwd] -> enter
 Do you want the command number in the prompt (yes/no)? [yes] -> enter
 Do you want to turn ornaments on? [yes] -> enter
 Do you want to turn on colored output? [no] -> enter
 Your terminal expects ISO-8859-1 (yes/no)? [yes] -> enter
 File to save your history? [/mnt/sdb1/Users/gael/.cpan/histfile] -> enter
 Number of lines to save? [100] -> enter
 Always try to show upload date with 'd' and 'm' command (yes/no)? [no] -> enter
 Show all individual modules that have no $VERSION? [no] -> enter
 Show all individual modules that have a $VERSION of zero? [no] -> enter
 If no urllist has been chosen yet, would you prefer CPAN.pm to connect
 to the built-in default sites without asking? (yes/no)? [yes] -> enter
 Would you like me to automatically choose some CPAN mirror sites for you? (This means connecting to the Internet) [yes] -> enter (will go on internet on download some stuff, downloading stuff for around 2 hours)
}}}

Now, you want to build the module. As it may be long (especially if you have to re-download and re-do all the metadata), you want to be able to close your telnet/ssh command. Otherwise, it will just take around 15 minutes to build everything. To be able to close your consol, used this command :

{{{
nohup cpan Device::SerialPort > /mnt/ExtUSB/Users/gael/PerlReport.txt
}}}

This will put all the consol output to the file PerlReport.txt


Then, your files are there :
{{{
/mnt/sdb1/Users/gael/.cpan/build/Device-SerialPort-1.04-RANDOMLETTER/blilb/arch/auto/Device/SerialPort/SerialPort.bs
}}}
and
{{{
/mnt/sdb1/Users/gael/.cpan/build/Device-SerialPort-1.04-RANDOMLETTER/blilb/arch/auto/Device/SerialPort/SerialPort.so
}}}
and
{{{
/mnt/sdb1/Users/gael/.cpan/build/Device-SerialPort-1.04-RANDOMLETTER/blilb/arch/Device/SerialPort.pm
}}}
 
Your are done ! Congratulation!

== 3 : Example of my fhem.cfg file ==
{{{
attr global autoload_undefined_devices 1
attr global logfile /mnt/ExtUSB/Users/gael/FHEM/log/fhem/fhem-%Y-%m.log
attr global modpath /mnt/ExtUSB/Alt-F/usr/share/fhem
attr global port 7072
attr global statefile /mnt/ExtUSB/Users/gael/FHEM/log/fhem/fhem.save
attr global userattr Haus building room structexclude webCmd
attr global verbose 3

define CUL1 CUL /dev/ttyACM0@9600 1422

define WEB FHEMWEB 8083 global

define Logfile FileLog /mnt/ExtUSB/Users/gael/FHEM/log/fhem/fhem-%Y-%m.log fakelog

define autocreate autocreate
attr autocreate autosave 1
attr autocreate device_room %TYPE
attr autocreate disable 1
attr autocreate filelog /mnt/ExtUSB/Users/gael/FHEM/log/fhem/%NAME-%Y-%m.log
attr autocreate weblink 1
attr autocreate weblink_room Plots

#############
#	Rooms	#
#############
define FHT.Bureau FHT xxxx
attr FHT.Bureau retrycount 3
attr FHT.Bureau room Bureau

define FileLog_FHT.Bureau FileLog /mnt/ExtUSB/Users/gael/FHEM/log/fhem/FHT.Bureau-%Y-%m.log FHT.Bureau
attr FileLog_FHT.Bureau logtype fht:Temp/Act,text
attr FileLog_FHT.Bureau room Bureau

define weblink_FHT.Bureau weblink fileplot FileLog_FHT.Bureau:fht:CURRENT
attr weblink_FHT.Bureau label "FHT.Bureau Min $data{min1}, Max $data{max1}, Last $data{currval1}"
attr weblink_FHT.Bureau room Bureau
}}}
